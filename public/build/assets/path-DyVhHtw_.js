const c=Math.PI,x=2*c,u=1e-6,m=x-u;function E(n){this._+=n[0];for(let t=1,h=n.length;t<h;++t)this._+=arguments[t]+n[t]}function A(n){let t=Math.floor(n);if(!(t>=0))throw new Error(`invalid digits: ${n}`);if(t>15)return E;const h=10**t;return function(i){this._+=i[0];for(let s=1,e=i.length;s<e;++s)this._+=Math.round(arguments[s]*h)/h+i[s]}}class L{constructor(t){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=t==null?E:A(t)}moveTo(t,h){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+h}`}closePath(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(t,h){this._append`L${this._x1=+t},${this._y1=+h}`}quadraticCurveTo(t,h,i,s){this._append`Q${+t},${+h},${this._x1=+i},${this._y1=+s}`}bezierCurveTo(t,h,i,s,e,$){this._append`C${+t},${+h},${+i},${+s},${this._x1=+e},${this._y1=+$}`}arcTo(t,h,i,s,e){if(t=+t,h=+h,i=+i,s=+s,e=+e,e<0)throw new Error(`negative radius: ${e}`);let $=this._x1,d=this._y1,p=i-t,l=s-h,_=$-t,o=d-h,a=_*_+o*o;if(this._x1===null)this._append`M${this._x1=t},${this._y1=h}`;else if(a>u)if(!(Math.abs(o*p-l*_)>u)||!e)this._append`L${this._x1=t},${this._y1=h}`;else{let r=i-$,f=s-d,y=p*p+l*l,T=r*r+f*f,g=Math.sqrt(y),v=Math.sqrt(a),w=e*Math.tan((c-Math.acos((y+a-T)/(2*g*v)))/2),M=w/v,b=w/g;Math.abs(M-1)>u&&this._append`L${t+M*_},${h+M*o}`,this._append`A${e},${e},0,0,${+(o*r>_*f)},${this._x1=t+b*p},${this._y1=h+b*l}`}}arc(t,h,i,s,e,$){if(t=+t,h=+h,i=+i,$=!!$,i<0)throw new Error(`negative radius: ${i}`);let d=i*Math.cos(s),p=i*Math.sin(s),l=t+d,_=h+p,o=1^$,a=$?s-e:e-s;this._x1===null?this._append`M${l},${_}`:(Math.abs(this._x1-l)>u||Math.abs(this._y1-_)>u)&&this._append`L${l},${_}`,i&&(a<0&&(a=a%x+x),a>m?this._append`A${i},${i},0,1,${o},${t-d},${h-p}A${i},${i},0,1,${o},${this._x1=l},${this._y1=_}`:a>u&&this._append`A${i},${i},0,${+(a>=c)},${o},${this._x1=t+i*Math.cos(e)},${this._y1=h+i*Math.sin(e)}`)}rect(t,h,i,s){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+h}h${i=+i}v${+s}h${-i}Z`}toString(){return this._}}function P(n){let t=3;return n.digits=function(h){if(!arguments.length)return t;if(h==null)t=null;else{const i=Math.floor(h);if(!(i>=0))throw new RangeError(`invalid digits: ${h}`);t=i}return n},()=>new L(t)}export{P as w};
